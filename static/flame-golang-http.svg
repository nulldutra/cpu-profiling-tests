<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>runtime.schedule (5 samples, 4.95%)</title><rect x="921.3" y="213" width="58.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="924.29" y="223.5" >runtim..</text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (7 samples, 6.93%)</title><rect x="360.5" y="197" width="81.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="363.50" y="207.5" >net/http...</text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.99%)</title><rect x="465.6" y="133" width="11.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="468.64" y="143.5" ></text>
</g>
<g >
<title>runtime.mPark (6 samples, 5.94%)</title><rect x="1038.1" y="181" width="70.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1041.12" y="191.5" >runtime..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (1 samples, 0.99%)</title><rect x="1131.6" y="165" width="11.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1134.58" y="175.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (52 samples, 51.49%)</title><rect x="10.0" y="245" width="607.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.99%)</title><rect x="617.5" y="149" width="11.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="620.52" y="159.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.99%)</title><rect x="337.1" y="165" width="11.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="340.13" y="175.5" ></text>
</g>
<g >
<title>syscall.write (6 samples, 5.94%)</title><rect x="372.2" y="133" width="70.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="375.18" y="143.5" >syscall..</text>
</g>
<g >
<title>syscall.Read (1 samples, 0.99%)</title><rect x="617.5" y="197" width="11.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="620.52" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (12 samples, 11.88%)</title><rect x="150.2" y="69" width="140.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="153.20" y="79.5" >internal/runtime/..</text>
</g>
<g >
<title>syscall.RawSyscall6 (13 samples, 12.87%)</title><rect x="652.6" y="53" width="151.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="655.57" y="63.5" >syscall.RawSyscall6</text>
</g>
<g >
<title>runtime.adjustframe (2 samples, 1.98%)</title><rect x="45.0" y="181" width="23.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="48.05" y="191.5" >r..</text>
</g>
<g >
<title>runtime.findRunnable (4 samples, 3.96%)</title><rect x="933.0" y="197" width="46.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="935.97" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.99%)</title><rect x="454.0" y="133" width="11.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="456.96" y="143.5" ></text>
</g>
<g >
<title>internal/poll.accept (14 samples, 13.86%)</title><rect x="640.9" y="117" width="163.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="643.89" y="127.5" >internal/poll.accept</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.99%)</title><rect x="909.6" y="165" width="11.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="912.60" y="175.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.99%)</title><rect x="640.9" y="53" width="11.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="643.89" y="63.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.99%)</title><rect x="1178.3" y="181" width="11.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1181.32" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (6 samples, 5.94%)</title><rect x="547.4" y="85" width="70.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="550.43" y="95.5" >syscall..</text>
</g>
<g >
<title>syscall.Syscall6 (14 samples, 13.86%)</title><rect x="640.9" y="69" width="163.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="643.89" y="79.5" >syscall.Syscall6</text>
</g>
<g >
<title>internal/runtime/maps.(*Map).deleteSmall (1 samples, 0.99%)</title><rect x="348.8" y="149" width="11.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="351.81" y="159.5" ></text>
</g>
<g >
<title>net/http.newBufioReader (1 samples, 0.99%)</title><rect x="489.0" y="229" width="11.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="492.01" y="239.5" ></text>
</g>
<g >
<title>net/http.readRequest (1 samples, 0.99%)</title><rect x="91.8" y="213" width="11.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="94.78" y="223.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (2 samples, 1.98%)</title><rect x="10.0" y="229" width="23.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >b..</text>
</g>
<g >
<title>internal/byteorder.BEUint64 (1 samples, 0.99%)</title><rect x="68.4" y="197" width="11.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="71.42" y="207.5" ></text>
</g>
<g >
<title>syscall.accept4 (14 samples, 13.86%)</title><rect x="640.9" y="85" width="163.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="643.89" y="95.5" >syscall.accept4</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.99%)</title><rect x="629.2" y="213" width="11.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="632.21" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (15 samples, 14.85%)</title><rect x="150.2" y="149" width="175.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="153.20" y="159.5" >internal/poll.(*FD).de..</text>
</g>
<g >
<title>net/http.Header.writeSubset (1 samples, 0.99%)</title><rect x="477.3" y="181" width="11.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="480.33" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1 samples, 0.99%)</title><rect x="103.5" y="197" width="11.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="106.47" y="207.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (1 samples, 0.99%)</title><rect x="1014.8" y="181" width="11.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1017.75" y="191.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.99%)</title><rect x="126.8" y="165" width="11.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="129.83" y="175.5" ></text>
</g>
<g >
<title>log.(*Logger).output (8 samples, 7.92%)</title><rect x="524.1" y="165" width="93.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="527.06" y="175.5" >log.(*Logge..</text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (2 samples, 1.98%)</title><rect x="45.0" y="165" width="23.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="48.05" y="175.5" >r..</text>
</g>
<g >
<title>net.(*netFD).Close (16 samples, 15.84%)</title><rect x="150.2" y="181" width="186.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="153.20" y="191.5" >net.(*netFD).Close</text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (9 samples, 8.91%)</title><rect x="512.4" y="197" width="105.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="515.38" y="207.5" >net/http.Han..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollCtl (3 samples, 2.97%)</title><rect x="290.4" y="101" width="35.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="293.40" y="111.5" >in..</text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.99%)</title><rect x="10.0" y="117" width="11.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>runtime.newstack (3 samples, 2.97%)</title><rect x="33.4" y="213" width="35.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="36.37" y="223.5" >ru..</text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (1 samples, 0.99%)</title><rect x="103.5" y="165" width="11.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="106.47" y="175.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (12 samples, 11.88%)</title><rect x="150.2" y="85" width="140.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="153.20" y="95.5" >syscall.RawSyscall6</text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 2.97%)</title><rect x="874.6" y="101" width="35.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="877.55" y="111.5" >ru..</text>
</g>
<g >
<title>indexbytebody (1 samples, 0.99%)</title><rect x="126.8" y="149" width="11.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="129.83" y="159.5" ></text>
</g>
<g >
<title>runtime.pMask.clear (1 samples, 0.99%)</title><rect x="1143.3" y="181" width="11.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1146.27" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (1 samples, 0.99%)</title><rect x="103.5" y="213" width="11.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="106.47" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallScanNoHeader (1 samples, 0.99%)</title><rect x="629.2" y="181" width="11.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="632.21" y="191.5" ></text>
</g>
<g >
<title>net.newTCPConn (1 samples, 0.99%)</title><rect x="851.2" y="149" width="11.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="854.19" y="159.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.99%)</title><rect x="617.5" y="181" width="11.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="620.52" y="191.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (2 samples, 1.98%)</title><rect x="617.5" y="245" width="23.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="620.52" y="255.5" >n..</text>
</g>
<g >
<title>net.(*conn).Read (2 samples, 1.98%)</title><rect x="10.0" y="181" width="23.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >n..</text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.99%)</title><rect x="933.0" y="181" width="11.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="935.97" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.99%)</title><rect x="629.2" y="165" width="11.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="632.21" y="175.5" ></text>
</g>
<g >
<title>net.(*TCPListener).Accept (19 samples, 18.81%)</title><rect x="640.9" y="181" width="222.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="643.89" y="191.5" >net.(*TCPListener).Accept</text>
</g>
<g >
<title>net/http.(*conn).finalFlush (1 samples, 0.99%)</title><rect x="337.1" y="197" width="11.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="340.13" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.99%)</title><rect x="933.0" y="149" width="11.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="935.97" y="159.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (23 samples, 22.77%)</title><rect x="640.9" y="197" width="268.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="643.89" y="207.5" >net/http.(*Server).Serve</text>
</g>
<g >
<title>runtime.systemstack (4 samples, 3.96%)</title><rect x="862.9" y="165" width="46.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="865.87" y="175.5" >runt..</text>
</g>
<g >
<title>runtime.step (1 samples, 0.99%)</title><rect x="465.6" y="101" width="11.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="468.64" y="111.5" ></text>
</g>
<g >
<title>runtime.newproc (4 samples, 3.96%)</title><rect x="862.9" y="181" width="46.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="865.87" y="191.5" >runt..</text>
</g>
<g >
<title>runtime.startm (3 samples, 2.97%)</title><rect x="874.6" y="117" width="35.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="877.55" y="127.5" >ru..</text>
</g>
<g >
<title>internal/stringslite.HasSuffix (1 samples, 0.99%)</title><rect x="91.8" y="181" width="11.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="94.78" y="191.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTRIO (1 samples, 0.99%)</title><rect x="10.0" y="149" width="11.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>net/http.(*Server).newConn (1 samples, 0.99%)</title><rect x="909.6" y="197" width="11.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="912.60" y="207.5" ></text>
</g>
<g >
<title>net/http.appendTime (1 samples, 0.99%)</title><rect x="442.3" y="181" width="11.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="445.28" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.99%)</title><rect x="21.7" y="101" width="11.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="24.68" y="111.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 1.98%)</title><rect x="816.1" y="69" width="23.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="819.14" y="79.5" >i..</text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.99%)</title><rect x="617.5" y="213" width="11.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="620.52" y="223.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.99%)</title><rect x="91.8" y="165" width="11.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="94.78" y="175.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (1 samples, 0.99%)</title><rect x="477.3" y="197" width="11.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="480.33" y="207.5" ></text>
</g>
<g >
<title>net.(*conn).Write (6 samples, 5.94%)</title><rect x="372.2" y="181" width="70.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="375.18" y="191.5" >net.(*c..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.99%)</title><rect x="909.6" y="181" width="11.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="912.60" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (6 samples, 5.94%)</title><rect x="1038.1" y="165" width="70.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1041.12" y="175.5" >runtime..</text>
</g>
<g >
<title>net/http.(*conn).setState (1 samples, 0.99%)</title><rect x="348.8" y="213" width="11.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="351.81" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (6 samples, 5.94%)</title><rect x="547.4" y="69" width="70.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="550.43" y="79.5" >interna..</text>
</g>
<g >
<title>runtime.newproc.func1 (4 samples, 3.96%)</title><rect x="862.9" y="149" width="46.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="865.87" y="159.5" >runt..</text>
</g>
<g >
<title>runtime.stealWork (2 samples, 1.98%)</title><rect x="1155.0" y="181" width="23.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1157.95" y="191.5" >r..</text>
</g>
<g >
<title>all (101 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.99%)</title><rect x="909.6" y="149" width="11.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="912.60" y="159.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (1 samples, 0.99%)</title><rect x="103.5" y="133" width="11.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="106.47" y="143.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (6 samples, 5.94%)</title><rect x="372.2" y="165" width="70.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="375.18" y="175.5" >net.(*n..</text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 5.94%)</title><rect x="1038.1" y="149" width="70.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1041.12" y="159.5" >runtime..</text>
</g>
<g >
<title>net/http.(*chunkWriter).close (4 samples, 3.96%)</title><rect x="442.3" y="213" width="46.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="445.28" y="223.5" >net/..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (6 samples, 5.94%)</title><rect x="372.2" y="85" width="70.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="375.18" y="95.5" >interna..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (3 samples, 2.97%)</title><rect x="290.4" y="85" width="35.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="293.40" y="95.5" >in..</text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.99%)</title><rect x="465.6" y="117" width="11.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="468.64" y="127.5" ></text>
</g>
<g >
<title>net/http.putBufioReader (1 samples, 0.99%)</title><rect x="337.1" y="181" width="11.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="340.13" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (1 samples, 0.99%)</title><rect x="126.8" y="181" width="11.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="129.83" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 1.98%)</title><rect x="944.7" y="149" width="23.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.65" y="159.5" >i..</text>
</g>
<g >
<title>runtime.futex (6 samples, 5.94%)</title><rect x="1038.1" y="133" width="70.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1041.12" y="143.5" >runtime..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (2 samples, 1.98%)</title><rect x="944.7" y="165" width="23.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="947.65" y="175.5" >i..</text>
</g>
<g >
<title>bufio.(*Reader).fill (2 samples, 1.98%)</title><rect x="10.0" y="213" width="23.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >b..</text>
</g>
<g >
<title>net/http.(*conn).readRequest (5 samples, 4.95%)</title><rect x="91.8" y="229" width="58.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="94.78" y="239.5" >net/ht..</text>
</g>
<g >
<title>net.(*TCPListener).accept (19 samples, 18.81%)</title><rect x="640.9" y="165" width="222.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="643.89" y="175.5" >net.(*TCPListener).accept</text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.99%)</title><rect x="10.0" y="133" width="11.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).close (3 samples, 2.97%)</title><rect x="290.4" y="133" width="35.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="293.40" y="143.5" >in..</text>
</g>
<g >
<title>runtime.limiterEventStamp.typ (1 samples, 0.99%)</title><rect x="968.0" y="165" width="11.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="971.02" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall (12 samples, 11.88%)</title><rect x="150.2" y="101" width="140.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="153.20" y="111.5" >syscall.Syscall</text>
</g>
<g >
<title>net/http.(*connReader).Read (2 samples, 1.98%)</title><rect x="10.0" y="197" width="23.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >n..</text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (1 samples, 0.99%)</title><rect x="103.5" y="181" width="11.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="106.47" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Accept (14 samples, 13.86%)</title><rect x="640.9" y="133" width="163.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="643.89" y="143.5" >internal/poll.(*FD).A..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.99%)</title><rect x="21.7" y="85" width="11.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="24.68" y="95.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (3 samples, 2.97%)</title><rect x="804.5" y="101" width="35.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="807.46" y="111.5" >in..</text>
</g>
<g >
<title>sync.(*copyChecker).check (1 samples, 0.99%)</title><rect x="103.5" y="117" width="11.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="106.47" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.99%)</title><rect x="629.2" y="197" width="11.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="632.21" y="207.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (24 samples, 23.76%)</title><rect x="640.9" y="213" width="280.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="643.89" y="223.5" >net/http.(*Server).ListenAndServe</text>
</g>
<g >
<title>net/http.ListenAndServe (24 samples, 23.76%)</title><rect x="640.9" y="229" width="280.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="643.89" y="239.5" >net/http.ListenAndServe</text>
</g>
<g >
<title>internal/poll.(*SysFile).destroy (12 samples, 11.88%)</title><rect x="150.2" y="133" width="140.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="153.20" y="143.5" >internal/poll.(*S..</text>
</g>
<g >
<title>syscall.Syscall (6 samples, 5.94%)</title><rect x="372.2" y="117" width="70.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="375.18" y="127.5" >syscall..</text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.99%)</title><rect x="535.7" y="149" width="11.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="538.74" y="159.5" ></text>
</g>
<g >
<title>net.IP.String (1 samples, 0.99%)</title><rect x="68.4" y="213" width="11.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="71.42" y="223.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.99%)</title><rect x="617.5" y="165" width="11.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="620.52" y="175.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.99%)</title><rect x="933.0" y="165" width="11.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="935.97" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (17 samples, 16.83%)</title><rect x="991.4" y="197" width="198.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="994.39" y="207.5" >runtime.findRunnable</text>
</g>
<g >
<title>net/http.(*Server).trackConn (1 samples, 0.99%)</title><rect x="348.8" y="197" width="11.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="351.81" y="207.5" ></text>
</g>
<g >
<title>net.(*TCPAddr).String (3 samples, 2.97%)</title><rect x="33.4" y="229" width="35.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="36.37" y="239.5" >ne..</text>
</g>
<g >
<title>runtime.copystack (2 samples, 1.98%)</title><rect x="454.0" y="165" width="23.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="456.96" y="175.5" >r..</text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.99%)</title><rect x="1166.6" y="149" width="11.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1169.63" y="159.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (3 samples, 2.97%)</title><rect x="115.1" y="213" width="35.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="118.15" y="223.5" >ne..</text>
</g>
<g >
<title>runtime.netpoll (2 samples, 1.98%)</title><rect x="944.7" y="181" width="23.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="947.65" y="191.5" >r..</text>
</g>
<g >
<title>runtime.copystack (2 samples, 1.98%)</title><rect x="45.0" y="197" width="23.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="48.05" y="207.5" >r..</text>
</g>
<g >
<title>net/url.ParseRequestURI (1 samples, 0.99%)</title><rect x="91.8" y="197" width="11.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="94.78" y="207.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (2 samples, 1.98%)</title><rect x="10.0" y="165" width="23.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >n..</text>
</g>
<g >
<title>runtime.mcall (23 samples, 22.77%)</title><rect x="921.3" y="245" width="268.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="924.29" y="255.5" >runtime.mcall</text>
</g>
<g >
<title>net/http.(*Server).protocols (1 samples, 0.99%)</title><rect x="80.1" y="229" width="11.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="83.10" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (17 samples, 16.83%)</title><rect x="991.4" y="213" width="198.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="994.39" y="223.5" >runtime.schedule</text>
</g>
<g >
<title>internal/runtime/syscall.EpollCtl (2 samples, 1.98%)</title><rect x="816.1" y="85" width="23.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="819.14" y="95.5" >i..</text>
</g>
<g >
<title>net.(*TCPConn).SetKeepAliveConfig (1 samples, 0.99%)</title><rect x="851.2" y="133" width="11.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="854.19" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 2.97%)</title><rect x="874.6" y="85" width="35.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="877.55" y="95.5" >ru..</text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (10 samples, 9.90%)</title><rect x="500.7" y="213" width="116.8" height="15.0" fill="rgb(239,158,38)" rx="2" ry="2" />
<text  x="503.69" y="223.5" >net/http.(*Ser..</text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (1 samples, 0.99%)</title><rect x="138.5" y="181" width="11.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="141.51" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).init (3 samples, 2.97%)</title><rect x="804.5" y="149" width="35.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="807.46" y="159.5" >ne..</text>
</g>
<g >
<title>net/http.(*conn).serve.func1 (18 samples, 17.82%)</title><rect x="150.2" y="229" width="210.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="153.20" y="239.5" >net/http.(*conn).serve.func1</text>
</g>
<g >
<title>net/http.(*conn).close (17 samples, 16.83%)</title><rect x="150.2" y="213" width="198.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="153.20" y="223.5" >net/http.(*conn).close</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.99%)</title><rect x="933.0" y="133" width="11.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="935.97" y="143.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (13 samples, 12.87%)</title><rect x="652.6" y="37" width="151.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="655.57" y="47.5" >internal/runtime/sy..</text>
</g>
<g >
<title>runtime.goexit0 (5 samples, 4.95%)</title><rect x="921.3" y="229" width="58.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="924.29" y="239.5" >runtim..</text>
</g>
<g >
<title>syscall.RawSyscall6 (6 samples, 5.94%)</title><rect x="372.2" y="101" width="70.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="375.18" y="111.5" >syscall..</text>
</g>
<g >
<title>runtime.mapdelete_fast64 (1 samples, 0.99%)</title><rect x="348.8" y="181" width="11.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="351.81" y="191.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.99%)</title><rect x="21.7" y="149" width="11.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="24.68" y="159.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (3 samples, 2.97%)</title><rect x="115.1" y="197" width="35.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="118.15" y="207.5" >ne..</text>
</g>
<g >
<title>internal/poll.runtime_pollClose (3 samples, 2.97%)</title><rect x="290.4" y="117" width="35.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="293.40" y="127.5" >in..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.99%)</title><rect x="1131.6" y="149" width="11.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1134.58" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.99%)</title><rect x="617.5" y="133" width="11.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="620.52" y="143.5" ></text>
</g>
<g >
<title>net.ipEmptyString (1 samples, 0.99%)</title><rect x="68.4" y="229" width="11.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="71.42" y="239.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.99%)</title><rect x="1026.4" y="181" width="11.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1029.44" y="191.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.99%)</title><rect x="21.7" y="133" width="11.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="24.68" y="143.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (2 samples, 1.98%)</title><rect x="454.0" y="149" width="23.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="456.96" y="159.5" >r..</text>
</g>
<g >
<title>net.(*conn).Read (2 samples, 1.98%)</title><rect x="617.5" y="229" width="23.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="620.52" y="239.5" >n..</text>
</g>
<g >
<title>bufio.(*Writer).Flush (7 samples, 6.93%)</title><rect x="360.5" y="213" width="81.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="363.50" y="223.5" >bufio.(*W..</text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.99%)</title><rect x="839.5" y="133" width="11.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="842.50" y="143.5" ></text>
</g>
<g >
<title>os.(*File).write (6 samples, 5.94%)</title><rect x="547.4" y="149" width="70.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="550.43" y="159.5" >os.(*Fi..</text>
</g>
<g >
<title>syscall.write (6 samples, 5.94%)</title><rect x="547.4" y="117" width="70.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="550.43" y="127.5" >syscall..</text>
</g>
<g >
<title>net.(*netFD).accept (14 samples, 13.86%)</title><rect x="640.9" y="149" width="163.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="643.89" y="159.5" >net.(*netFD).accept</text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.99%)</title><rect x="862.9" y="101" width="11.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="865.87" y="111.5" ></text>
</g>
<g >
<title>runtime.newproc1 (1 samples, 0.99%)</title><rect x="862.9" y="133" width="11.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="865.87" y="143.5" ></text>
</g>
<g >
<title>runtime.main (24 samples, 23.76%)</title><rect x="640.9" y="245" width="280.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="643.89" y="255.5" >runtime.main</text>
</g>
<g >
<title>runtime.wakep (3 samples, 2.97%)</title><rect x="874.6" y="133" width="35.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="877.55" y="143.5" >ru..</text>
</g>
<g >
<title>net.(*conn).Close (16 samples, 15.84%)</title><rect x="150.2" y="197" width="186.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="153.20" y="207.5" >net.(*conn).Close</text>
</g>
<g >
<title>syscall.Close (12 samples, 11.88%)</title><rect x="150.2" y="117" width="140.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="153.20" y="127.5" >syscall.Close</text>
</g>
<g >
<title>internal/poll.(*FD).Init (3 samples, 2.97%)</title><rect x="804.5" y="133" width="35.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="807.46" y="143.5" >in..</text>
</g>
<g >
<title>internal/poll.(*FD).Close (15 samples, 14.85%)</title><rect x="150.2" y="165" width="175.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="153.20" y="175.5" >internal/poll.(*FD).Cl..</text>
</g>
<g >
<title>runtime.(*stkframe).argMapInternal (1 samples, 0.99%)</title><rect x="56.7" y="149" width="11.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="59.73" y="159.5" ></text>
</g>
<g >
<title>net.(*netFD).setAddr (1 samples, 0.99%)</title><rect x="839.5" y="149" width="11.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="842.50" y="159.5" ></text>
</g>
<g >
<title>syscall.Write (6 samples, 5.94%)</title><rect x="372.2" y="149" width="70.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="375.18" y="159.5" >syscall..</text>
</g>
<g >
<title>log.Printf (9 samples, 8.91%)</title><rect x="512.4" y="181" width="105.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="515.38" y="191.5" >log.Printf</text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.99%)</title><rect x="862.9" y="85" width="11.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="865.87" y="95.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 2.97%)</title><rect x="874.6" y="69" width="35.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="877.55" y="79.5" >ru..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (3 samples, 2.97%)</title><rect x="804.5" y="117" width="35.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="807.46" y="127.5" >in..</text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.99%)</title><rect x="21.7" y="117" width="11.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="24.68" y="127.5" ></text>
</g>
<g >
<title>internal/runtime/maps.(*Map).Delete (1 samples, 0.99%)</title><rect x="348.8" y="165" width="11.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="351.81" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall (6 samples, 5.94%)</title><rect x="547.4" y="101" width="70.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="550.43" y="111.5" >syscall..</text>
</g>
<g >
<title>runtime.funcname (1 samples, 0.99%)</title><rect x="862.9" y="117" width="11.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="865.87" y="127.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.99%)</title><rect x="325.4" y="165" width="11.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="328.45" y="175.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.99%)</title><rect x="1166.6" y="165" width="11.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1169.63" y="175.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (3 samples, 2.97%)</title><rect x="442.3" y="197" width="35.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="445.28" y="207.5" >ne..</text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.99%)</title><rect x="968.0" y="181" width="11.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="971.02" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (11 samples, 10.89%)</title><rect x="360.5" y="229" width="128.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="363.50" y="239.5" >net/http.(*respo..</text>
</g>
<g >
<title>runtime.newstack (2 samples, 1.98%)</title><rect x="454.0" y="181" width="23.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="456.96" y="191.5" >r..</text>
</g>
<g >
<title>runtime.netpoll (3 samples, 2.97%)</title><rect x="1108.2" y="181" width="35.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1111.22" y="191.5" >ru..</text>
</g>
<g >
<title>syscall.Accept4 (14 samples, 13.86%)</title><rect x="640.9" y="101" width="163.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="643.89" y="111.5" >syscall.Accept4</text>
</g>
<g >
<title>syscall.Write (6 samples, 5.94%)</title><rect x="547.4" y="133" width="70.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="550.43" y="143.5" >syscall..</text>
</g>
<g >
<title>bufio.(*Reader).fill (1 samples, 0.99%)</title><rect x="103.5" y="149" width="11.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="106.47" y="159.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (10 samples, 9.90%)</title><rect x="500.7" y="229" width="116.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="503.69" y="239.5" >net/http.serve..</text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.99%)</title><rect x="640.9" y="37" width="11.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="643.89" y="47.5" ></text>
</g>
<g >
<title>runtime.park_m (18 samples, 17.82%)</title><rect x="979.7" y="229" width="210.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="982.70" y="239.5" >runtime.park_m</text>
</g>
</g>
</svg>
