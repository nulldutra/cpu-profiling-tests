<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>runtime.main (19 samples, 16.24%)</title><rect x="726.1" y="357" width="191.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="729.07" y="367.5" >runtime.main</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.85%)</title><rect x="544.5" y="229" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="547.53" y="239.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newarray (1 samples, 0.85%)</title><rect x="131.0" y="261" width="10.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="134.03" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newGroups (1 samples, 0.85%)</title><rect x="131.0" y="277" width="10.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="134.03" y="287.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.85%)</title><rect x="635.3" y="245" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="638.30" y="255.5" ></text>
</g>
<g >
<title>internal/poll.accept (9 samples, 7.69%)</title><rect x="746.2" y="213" width="90.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="749.24" y="223.5" >internal/p..</text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (19 samples, 16.24%)</title><rect x="726.1" y="309" width="191.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="729.07" y="319.5" >net/http.(*Server).Listen..</text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (1 samples, 0.85%)</title><rect x="373.1" y="309" width="10.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="376.08" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.71%)</title><rect x="524.4" y="101" width="20.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="527.36" y="111.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.85%)</title><rect x="1159.7" y="309" width="10.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1162.74" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 2.56%)</title><rect x="1119.4" y="245" width="30.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1122.40" y="255.5" >ru..</text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.85%)</title><rect x="131.0" y="245" width="10.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="134.03" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (7 samples, 5.98%)</title><rect x="383.2" y="229" width="70.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="386.16" y="239.5" >syscall..</text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 5.13%)</title><rect x="1008.5" y="261" width="60.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1011.46" y="271.5" >runtim..</text>
</g>
<g >
<title>syscall.anyToSockaddr (1 samples, 0.85%)</title><rect x="826.9" y="181" width="10.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="829.92" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (2 samples, 1.71%)</title><rect x="151.2" y="293" width="20.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="154.20" y="303.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.85%)</title><rect x="161.3" y="181" width="10.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="164.28" y="191.5" ></text>
</g>
<g >
<title>net/http.ListenAndServe (19 samples, 16.24%)</title><rect x="726.1" y="325" width="191.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="729.07" y="335.5" >net/http.ListenAndServe</text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.85%)</title><rect x="655.5" y="213" width="10.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="658.47" y="223.5" ></text>
</g>
<g >
<title>syscall.accept4 (7 samples, 5.98%)</title><rect x="756.3" y="181" width="70.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="759.32" y="191.5" >syscall..</text>
</g>
<g >
<title>syscall.read (3 samples, 2.56%)</title><rect x="20.1" y="245" width="30.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="23.09" y="255.5" >sy..</text>
</g>
<g >
<title>net.(*netFD).init (1 samples, 0.85%)</title><rect x="837.0" y="245" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="840.01" y="255.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (6 samples, 5.13%)</title><rect x="463.8" y="149" width="60.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="466.85" y="159.5" >encodi..</text>
</g>
<g >
<title>runtime.newstack (6 samples, 5.13%)</title><rect x="463.8" y="133" width="60.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="466.85" y="143.5" >runtim..</text>
</g>
<g >
<title>runtime.stealWork (3 samples, 2.56%)</title><rect x="1119.4" y="293" width="30.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1122.40" y="303.5" >ru..</text>
</g>
<g >
<title>net.(*netFD).Write (7 samples, 5.98%)</title><rect x="383.2" y="277" width="70.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="386.16" y="287.5" >net.(*n..</text>
</g>
<g >
<title>runtime.goexit0 (5 samples, 4.27%)</title><rect x="917.7" y="341" width="50.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="920.69" y="351.5" >runti..</text>
</g>
<g >
<title>runtime.addfinalizer (1 samples, 0.85%)</title><rect x="857.2" y="181" width="10.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="860.18" y="191.5" ></text>
</g>
<g >
<title>net.(*TCPConn).Close (1 samples, 0.85%)</title><rect x="211.7" y="309" width="10.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="214.71" y="319.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.85%)</title><rect x="1149.7" y="293" width="10.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1152.66" y="303.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).ServeHTTP (25 samples, 21.37%)</title><rect x="453.8" y="325" width="252.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="456.76" y="335.5" >github.com/gin-gonic/gin.(*Engine..</text>
</g>
<g >
<title>os.(*File).write (4 samples, 3.42%)</title><rect x="564.7" y="261" width="40.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="567.70" y="271.5" >os...</text>
</g>
<g >
<title>bufio.(*Reader).fill (2 samples, 1.71%)</title><rect x="151.2" y="261" width="20.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="154.20" y="271.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.85%)</title><rect x="60.4" y="277" width="10.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="63.43" y="287.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.85%)</title><rect x="60.4" y="293" width="10.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="63.43" y="303.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.85%)</title><rect x="504.2" y="53" width="10.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="507.19" y="63.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 1.71%)</title><rect x="766.4" y="85" width="20.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="769.41" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/maps.NewMap (1 samples, 0.85%)</title><rect x="171.4" y="277" width="10.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="174.37" y="287.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.85%)</title><rect x="80.6" y="261" width="10.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="83.60" y="271.5" ></text>
</g>
<g >
<title>net.(*TCPConn).SetKeepAliveConfig (1 samples, 0.85%)</title><rect x="867.3" y="229" width="10.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="870.26" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 4.27%)</title><rect x="917.7" y="309" width="50.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="920.69" y="319.5" >runti..</text>
</g>
<g >
<title>net.newTCPConn (1 samples, 0.85%)</title><rect x="867.3" y="245" width="10.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="870.26" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (7 samples, 5.98%)</title><rect x="231.9" y="213" width="70.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="234.88" y="223.5" >syscall..</text>
</g>
<g >
<title>net.(*netFD).Close (12 samples, 10.26%)</title><rect x="221.8" y="293" width="121.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="224.79" y="303.5" >net.(*netFD).Cl..</text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (2 samples, 1.71%)</title><rect x="70.5" y="277" width="20.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="73.51" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Read (3 samples, 2.56%)</title><rect x="20.1" y="293" width="30.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="23.09" y="303.5" >ne..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.85%)</title><rect x="716.0" y="293" width="10.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="718.98" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).setAddr (2 samples, 1.71%)</title><rect x="847.1" y="245" width="20.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="850.09" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.85%)</title><rect x="181.5" y="293" width="10.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="184.45" y="303.5" ></text>
</g>
<g >
<title>runtime.pollInfo.closing (1 samples, 0.85%)</title><rect x="716.0" y="277" width="10.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="718.98" y="287.5" ></text>
</g>
<g >
<title>runtime.convT (1 samples, 0.85%)</title><rect x="544.5" y="245" width="10.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="547.53" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.85%)</title><rect x="141.1" y="309" width="10.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="144.11" y="319.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 2.56%)</title><rect x="20.1" y="229" width="30.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="23.09" y="239.5" >sy..</text>
</g>
<g >
<title>net.(*TCPListener).Accept (14 samples, 11.97%)</title><rect x="736.2" y="277" width="141.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="739.15" y="287.5" >net.(*TCPListener..</text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (1 samples, 0.85%)</title><rect x="837.0" y="197" width="10.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="840.01" y="207.5" ></text>
</g>
<g >
<title>net.(*conn).Close (12 samples, 10.26%)</title><rect x="221.8" y="309" width="121.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="224.79" y="319.5" >net.(*conn).Close</text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 1.71%)</title><rect x="524.4" y="165" width="20.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="527.36" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (4 samples, 3.42%)</title><rect x="917.7" y="277" width="40.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="920.69" y="287.5" >int..</text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.85%)</title><rect x="897.5" y="181" width="10.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="900.52" y="191.5" ></text>
</g>
<g >
<title>runtime.adjustframe (2 samples, 1.71%)</title><rect x="70.5" y="293" width="20.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="73.51" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*SysFile).destroy (7 samples, 5.98%)</title><rect x="231.9" y="245" width="70.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="234.88" y="255.5" >interna..</text>
</g>
<g >
<title>net/http.(*conn).readRequest (10 samples, 8.55%)</title><rect x="110.9" y="341" width="100.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="113.85" y="351.5" >net/http.(*c..</text>
</g>
<g >
<title>net/http.(*Server).trackConn (1 samples, 0.85%)</title><rect x="877.4" y="261" width="10.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="880.35" y="271.5" ></text>
</g>
<g >
<title>context.withCancel (3 samples, 2.56%)</title><rect x="110.9" y="325" width="30.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="113.85" y="335.5" >co..</text>
</g>
<g >
<title>internal/poll.(*FD).Accept (10 samples, 8.55%)</title><rect x="736.2" y="229" width="100.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="739.15" y="239.5" >internal/pol..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).JSON (9 samples, 7.69%)</title><rect x="463.8" y="261" width="90.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="466.85" y="271.5" >github.com..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.85%)</title><rect x="544.5" y="197" width="10.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="547.53" y="207.5" ></text>
</g>
<g >
<title>syscall.Close (7 samples, 5.98%)</title><rect x="231.9" y="229" width="70.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="234.88" y="239.5" >syscall..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollCtl (4 samples, 3.42%)</title><rect x="302.5" y="213" width="40.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="305.48" y="223.5" >int..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.85%)</title><rect x="131.0" y="229" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="134.03" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (12 samples, 10.26%)</title><rect x="221.8" y="261" width="121.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="224.79" y="271.5" >internal/poll.(..</text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.85%)</title><rect x="40.3" y="213" width="10.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="43.26" y="223.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.85%)</title><rect x="716.0" y="341" width="10.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="718.98" y="351.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.85%)</title><rect x="171.4" y="293" width="10.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="174.37" y="303.5" ></text>
</g>
<g >
<title>internal/runtime/maps.(*Map).getWithoutKeySmallFastStr (1 samples, 0.85%)</title><rect x="181.5" y="277" width="10.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="184.45" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1 samples, 0.85%)</title><rect x="161.3" y="229" width="10.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.28" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.85%)</title><rect x="907.6" y="245" width="10.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="910.61" y="255.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollClose (4 samples, 3.42%)</title><rect x="302.5" y="229" width="40.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="305.48" y="239.5" >int..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).close (4 samples, 3.42%)</title><rect x="302.5" y="245" width="40.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="305.48" y="255.5" >int..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (6 samples, 5.13%)</title><rect x="463.8" y="165" width="60.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="466.85" y="175.5" >encodi..</text>
</g>
<g >
<title>bufio.(*Writer).Flush (8 samples, 6.84%)</title><rect x="373.1" y="325" width="80.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="376.08" y="335.5" >bufio.(*W..</text>
</g>
<g >
<title>net/http.(*conn).serve.func1 (16 samples, 13.68%)</title><rect x="211.7" y="341" width="161.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="214.71" y="351.5" >net/http.(*conn).ser..</text>
</g>
<g >
<title>internal/poll.(*FD).destroy (1 samples, 0.85%)</title><rect x="221.8" y="245" width="10.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="224.79" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64ptr (1 samples, 0.85%)</title><rect x="877.4" y="245" width="10.0" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="880.35" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 1.71%)</title><rect x="20.1" y="213" width="20.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="23.09" y="223.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (2 samples, 1.71%)</title><rect x="352.9" y="325" width="20.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="355.91" y="335.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.85%)</title><rect x="80.6" y="229" width="10.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="83.60" y="239.5" ></text>
</g>
<g >
<title>syscall.Write (4 samples, 3.42%)</title><rect x="564.7" y="245" width="40.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="567.70" y="255.5" >sys..</text>
</g>
<g >
<title>runtime.newstack (5 samples, 4.27%)</title><rect x="60.4" y="325" width="50.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="63.43" y="335.5" >runti..</text>
</g>
<g >
<title>net/http.(*connReader).Read (3 samples, 2.56%)</title><rect x="20.1" y="309" width="30.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="23.09" y="319.5" >ne..</text>
</g>
<g >
<title>net.(*conn).Write (7 samples, 5.98%)</title><rect x="383.2" y="293" width="70.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="386.16" y="303.5" >net.(*c..</text>
</g>
<g >
<title>net.(*netFD).accept (10 samples, 8.55%)</title><rect x="736.2" y="245" width="100.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="739.15" y="255.5" >net.(*netFD)..</text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (25 samples, 21.37%)</title><rect x="453.8" y="341" width="252.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="456.76" y="351.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>net/http.(*Server).newConn (1 samples, 0.85%)</title><rect x="907.6" y="293" width="10.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="910.61" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.85%)</title><rect x="484.0" y="85" width="10.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="487.02" y="95.5" ></text>
</g>
<g >
<title>syscall.Accept4 (8 samples, 6.84%)</title><rect x="756.3" y="197" width="80.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="759.32" y="207.5" >syscall.A..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (2 samples, 1.71%)</title><rect x="1069.0" y="277" width="20.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1071.97" y="287.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.85%)</title><rect x="1179.9" y="357" width="10.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1182.91" y="367.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newGroups (2 samples, 1.71%)</title><rect x="524.4" y="149" width="20.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="527.36" y="159.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (1 samples, 0.85%)</title><rect x="857.2" y="197" width="10.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="860.18" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (7 samples, 5.98%)</title><rect x="231.9" y="181" width="70.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="234.88" y="191.5" >interna..</text>
</g>
<g >
<title>net/netip.ParseAddr (1 samples, 0.85%)</title><rect x="685.7" y="245" width="10.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="688.73" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (7 samples, 5.98%)</title><rect x="756.3" y="165" width="70.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="759.32" y="175.5" >syscall..</text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.85%)</title><rect x="161.3" y="149" width="10.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="164.28" y="159.5" ></text>
</g>
<g >
<title>syscall.Syscall (4 samples, 3.42%)</title><rect x="564.7" y="213" width="40.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="567.70" y="223.5" >sys..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 1.71%)</title><rect x="1069.0" y="261" width="20.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1071.97" y="271.5" ></text>
</g>
<g >
<title>runtime.copystack (3 samples, 2.56%)</title><rect x="60.4" y="309" width="30.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="63.43" y="319.5" >ru..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (7 samples, 5.98%)</title><rect x="383.2" y="197" width="70.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="386.16" y="207.5" >interna..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.85%)</title><rect x="776.5" y="53" width="10.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="779.50" y="63.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 1.71%)</title><rect x="463.8" y="85" width="20.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="466.85" y="95.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.85%)</title><rect x="161.3" y="165" width="10.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="164.28" y="175.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*responseWriter).WriteHeaderNow (2 samples, 1.71%)</title><rect x="524.4" y="197" width="20.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="527.36" y="207.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.85%)</title><rect x="998.4" y="293" width="10.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1001.38" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (4 samples, 3.42%)</title><rect x="786.6" y="149" width="40.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="789.58" y="159.5" >sys..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (9 samples, 7.69%)</title><rect x="463.8" y="277" width="90.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="466.85" y="287.5" >github.com..</text>
</g>
<g >
<title>runtime.(*unwinder).next (3 samples, 2.56%)</title><rect x="463.8" y="101" width="30.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="466.85" y="111.5" >ru..</text>
</g>
<g >
<title>net/http.(*conn).serve (69 samples, 58.97%)</title><rect x="10.0" y="357" width="695.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>bufio.(*Writer).Reset (1 samples, 0.85%)</title><rect x="50.3" y="341" width="10.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="53.34" y="351.5" ></text>
</g>
<g >
<title>time.Time.appendFormat (2 samples, 1.71%)</title><rect x="665.6" y="229" width="20.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="668.56" y="239.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.85%)</title><rect x="776.5" y="69" width="10.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="779.50" y="79.5" ></text>
</g>
<g >
<title>net/http.(*conn).finalFlush (1 samples, 0.85%)</title><rect x="342.8" y="309" width="10.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="345.82" y="319.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 2.56%)</title><rect x="1069.0" y="293" width="30.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1071.97" y="303.5" >ru..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.71%)</title><rect x="887.4" y="261" width="20.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="890.44" y="271.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 1.71%)</title><rect x="766.4" y="133" width="20.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="769.41" y="143.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (2 samples, 1.71%)</title><rect x="494.1" y="85" width="20.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="497.10" y="95.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (7 samples, 5.98%)</title><rect x="231.9" y="197" width="70.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="234.88" y="207.5" >syscall..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollCtl (1 samples, 0.85%)</title><rect x="837.0" y="181" width="10.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="840.01" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.Clone (2 samples, 1.71%)</title><rect x="524.4" y="181" width="20.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="527.36" y="191.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (2 samples, 1.71%)</title><rect x="151.2" y="325" width="20.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="154.20" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.85%)</title><rect x="1159.7" y="229" width="10.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1162.74" y="239.5" ></text>
</g>
<g >
<title>runtime.newarray (2 samples, 1.71%)</title><rect x="524.4" y="117" width="20.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="527.36" y="127.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).argMapInternal (1 samples, 0.85%)</title><rect x="70.5" y="261" width="10.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="73.51" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.85%)</title><rect x="716.0" y="325" width="10.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="718.98" y="335.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semrelease (1 samples, 0.85%)</title><rect x="221.8" y="229" width="10.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="224.79" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.85%)</title><rect x="524.4" y="69" width="10.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="527.36" y="79.5" ></text>
</g>
<g >
<title>syscall.Read (3 samples, 2.56%)</title><rect x="20.1" y="261" width="30.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="23.09" y="271.5" >sy..</text>
</g>
<g >
<title>runtime.(*randomEnum).done (1 samples, 0.85%)</title><rect x="988.3" y="293" width="10.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="991.29" y="303.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (1 samples, 0.85%)</title><rect x="161.3" y="245" width="10.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="164.28" y="255.5" ></text>
</g>
<g >
<title>runtime.gfget.func2 (1 samples, 0.85%)</title><rect x="897.5" y="197" width="10.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="900.52" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (20 samples, 17.09%)</title><rect x="968.1" y="341" width="201.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="971.12" y="351.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.entersyscall_sysmon (1 samples, 0.85%)</title><rect x="30.2" y="165" width="10.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="33.17" y="175.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.85%)</title><rect x="494.1" y="37" width="10.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="497.10" y="47.5" ></text>
</g>
<g >
<title>runtime.adjustpointer (1 samples, 0.85%)</title><rect x="514.3" y="101" width="10.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="517.27" y="111.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.85%)</title><rect x="342.8" y="277" width="10.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="345.82" y="287.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (2 samples, 1.71%)</title><rect x="847.1" y="229" width="20.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="850.09" y="239.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.85%)</title><rect x="181.5" y="261" width="10.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="184.45" y="271.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (7 samples, 5.98%)</title><rect x="383.2" y="213" width="70.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="386.16" y="223.5" >syscall..</text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.85%)</title><rect x="958.0" y="293" width="10.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="961.03" y="303.5" ></text>
</g>
<g >
<title>net/textproto.readMIMEHeader (2 samples, 1.71%)</title><rect x="171.4" y="309" width="20.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="174.37" y="319.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.CustomRecoveryWithWriter.func1 (1 samples, 0.85%)</title><rect x="554.6" y="277" width="10.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="557.62" y="287.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (2 samples, 1.71%)</title><rect x="151.2" y="277" width="20.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="154.20" y="287.5" ></text>
</g>
<g >
<title>net.(*TCPListener).accept (14 samples, 11.97%)</title><rect x="736.2" y="261" width="141.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="739.15" y="271.5" >net.(*TCPListener..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.71%)</title><rect x="645.4" y="245" width="20.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="648.38" y="255.5" ></text>
</g>
<g >
<title>time.Time.Format (2 samples, 1.71%)</title><rect x="665.6" y="261" width="20.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="668.56" y="271.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.LoggerWithConfig.func1 (13 samples, 11.11%)</title><rect x="564.7" y="293" width="131.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="567.70" y="303.5" >github.com/gin-g..</text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.85%)</title><rect x="544.5" y="181" width="10.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="547.53" y="191.5" ></text>
</g>
<g >
<title>runtime.runqgrab (3 samples, 2.56%)</title><rect x="1119.4" y="261" width="30.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1122.40" y="271.5" >ru..</text>
</g>
<g >
<title>runtime.schedule (5 samples, 4.27%)</title><rect x="917.7" y="325" width="50.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="920.69" y="335.5" >runti..</text>
</g>
<g >
<title>runtime.startm (1 samples, 0.85%)</title><rect x="1159.7" y="277" width="10.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1162.74" y="287.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (2 samples, 1.71%)</title><rect x="705.9" y="357" width="20.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="708.90" y="367.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.init.func1 (8 samples, 6.84%)</title><rect x="605.0" y="277" width="80.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="608.04" y="287.5" >github.co..</text>
</g>
<g >
<title>fmt.(*pp).handleMethods (1 samples, 0.85%)</title><rect x="625.2" y="213" width="10.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="628.21" y="223.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (18 samples, 15.38%)</title><rect x="726.1" y="293" width="181.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="729.07" y="303.5" >net/http.(*Server).Serve</text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.85%)</title><rect x="837.0" y="213" width="10.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="840.01" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.85%)</title><rect x="131.0" y="213" width="10.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="134.03" y="223.5" ></text>
</g>
<g >
<title>runtime.newproc (2 samples, 1.71%)</title><rect x="887.4" y="277" width="20.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="890.44" y="287.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 1.71%)</title><rect x="90.7" y="293" width="20.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="93.68" y="303.5" ></text>
</g>
<g >
<title>main.main (19 samples, 16.24%)</title><rect x="726.1" y="341" width="191.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="729.07" y="351.5" >main.main</text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.85%)</title><rect x="1159.7" y="293" width="10.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1162.74" y="303.5" ></text>
</g>
<g >
<title>internal/sync.(*Mutex).Lock (1 samples, 0.85%)</title><rect x="110.9" y="293" width="10.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="113.85" y="303.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (8 samples, 6.84%)</title><rect x="373.1" y="341" width="80.7" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="376.08" y="351.5" >net/http...</text>
</g>
<g >
<title>net/http.(*conn).close (14 samples, 11.97%)</title><rect x="211.7" y="325" width="141.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="214.71" y="335.5" >net/http.(*conn)...</text>
</g>
<g >
<title>runtime.schedule (20 samples, 17.09%)</title><rect x="968.1" y="325" width="201.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="971.12" y="335.5" >runtime.schedule</text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.85%)</title><rect x="837.0" y="229" width="10.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="840.01" y="239.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.JSON.Render (8 samples, 6.84%)</title><rect x="463.8" y="229" width="80.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="466.85" y="239.5" >github.co..</text>
</g>
<g >
<title>runtime.newproc1 (2 samples, 1.71%)</title><rect x="887.4" y="229" width="20.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="890.44" y="239.5" ></text>
</g>
<g >
<title>time.appendInt (1 samples, 0.85%)</title><rect x="665.6" y="213" width="10.0" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="668.56" y="223.5" ></text>
</g>
<g >
<title>runtime.mPark (6 samples, 5.13%)</title><rect x="1008.5" y="293" width="60.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1011.46" y="303.5" >runtim..</text>
</g>
<g >
<title>runtime.notesleep (6 samples, 5.13%)</title><rect x="1008.5" y="277" width="60.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1011.46" y="287.5" >runtim..</text>
</g>
<g >
<title>net.(*netFD).Read (3 samples, 2.56%)</title><rect x="20.1" y="277" width="30.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="23.09" y="287.5" >ne..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Render (8 samples, 6.84%)</title><rect x="463.8" y="245" width="80.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="466.85" y="255.5" >github.co..</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.85%)</title><rect x="30.2" y="133" width="10.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="33.17" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallScanNoHeader (1 samples, 0.85%)</title><rect x="544.5" y="213" width="10.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="547.53" y="223.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (6 samples, 5.13%)</title><rect x="463.8" y="197" width="60.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="466.85" y="207.5" >encodi..</text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 1.71%)</title><rect x="494.1" y="69" width="20.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="497.10" y="79.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (1 samples, 0.85%)</title><rect x="373.1" y="293" width="10.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="376.08" y="303.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.85%)</title><rect x="40.3" y="197" width="10.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="43.26" y="207.5" ></text>
</g>
<g >
<title>time.runtimeNow (1 samples, 0.85%)</title><rect x="201.6" y="309" width="10.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="204.62" y="319.5" ></text>
</g>
<g >
<title>net.parseIP (1 samples, 0.85%)</title><rect x="685.7" y="261" width="10.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="688.73" y="271.5" ></text>
</g>
<g >
<title>runtime.adjustframe (2 samples, 1.71%)</title><rect x="494.1" y="101" width="20.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="497.10" y="111.5" ></text>
</g>
<g >
<title>runtime.findRunnable (18 samples, 15.38%)</title><rect x="978.2" y="309" width="181.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="981.21" y="319.5" >runtime.findRunnable</text>
</g>
<g >
<title>context.(*cancelCtx).propagateCancel (3 samples, 2.56%)</title><rect x="110.9" y="309" width="30.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="113.85" y="319.5" >co..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.85%)</title><rect x="857.2" y="213" width="10.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="860.18" y="223.5" ></text>
</g>
<g >
<title>runtime.copystack (6 samples, 5.13%)</title><rect x="463.8" y="117" width="60.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="466.85" y="127.5" >runtim..</text>
</g>
<g >
<title>syscall.Write (7 samples, 5.98%)</title><rect x="383.2" y="261" width="70.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="386.16" y="271.5" >syscall..</text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.85%)</title><rect x="494.1" y="53" width="10.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="497.10" y="63.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.85%)</title><rect x="201.6" y="325" width="10.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="204.62" y="335.5" ></text>
</g>
<g >
<title>syscall.Read (1 samples, 0.85%)</title><rect x="161.3" y="197" width="10.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="164.28" y="207.5" ></text>
</g>
<g >
<title>runtime.runqsteal (3 samples, 2.56%)</title><rect x="1119.4" y="277" width="30.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1122.40" y="287.5" >ru..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (24 samples, 20.51%)</title><rect x="453.8" y="309" width="242.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="456.76" y="319.5" >github.com/gin-gonic/gin.(*Conte..</text>
</g>
<g >
<title>fmt.(*pp).doPrintf (3 samples, 2.56%)</title><rect x="605.0" y="245" width="30.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="608.04" y="255.5" >fm..</text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (7 samples, 5.98%)</title><rect x="383.2" y="309" width="70.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="386.16" y="319.5" >net/htt..</text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 1.71%)</title><rect x="766.4" y="101" width="20.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="769.41" y="111.5" ></text>
</g>
<g >
<title>net.ParseIP (1 samples, 0.85%)</title><rect x="685.7" y="277" width="10.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="688.73" y="287.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (4 samples, 3.42%)</title><rect x="10.0" y="325" width="40.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >buf..</text>
</g>
<g >
<title>strings.indexFunc (1 samples, 0.85%)</title><rect x="191.5" y="325" width="10.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="194.54" y="335.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 1.71%)</title><rect x="120.9" y="293" width="20.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="123.94" y="303.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin/render.WriteJSON (8 samples, 6.84%)</title><rect x="463.8" y="213" width="80.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="466.85" y="223.5" >github.co..</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.85%)</title><rect x="1159.7" y="245" width="10.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1162.74" y="255.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.85%)</title><rect x="484.0" y="53" width="10.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="487.02" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.85%)</title><rect x="544.5" y="165" width="10.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="547.53" y="175.5" ></text>
</g>
<g >
<title>all (117 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (1 samples, 0.85%)</title><rect x="524.4" y="85" width="10.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="527.36" y="95.5" ></text>
</g>
<g >
<title>runtime.gfget (2 samples, 1.71%)</title><rect x="887.4" y="213" width="20.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="890.44" y="223.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (1 samples, 0.85%)</title><rect x="655.5" y="229" width="10.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="658.47" y="239.5" ></text>
</g>
<g >
<title>runtime.pMask.read (2 samples, 1.71%)</title><rect x="1099.2" y="293" width="20.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1102.23" y="303.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*node).getValue (1 samples, 0.85%)</title><rect x="695.8" y="293" width="10.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="698.81" y="303.5" ></text>
</g>
<g >
<title>fmt.Sprintf (4 samples, 3.42%)</title><rect x="605.0" y="261" width="40.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="608.04" y="271.5" >fmt..</text>
</g>
<g >
<title>fmt.Fprint (4 samples, 3.42%)</title><rect x="564.7" y="277" width="40.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="567.70" y="287.5" >fmt..</text>
</g>
<g >
<title>runtime.mcall (25 samples, 21.37%)</title><rect x="917.7" y="357" width="252.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="920.69" y="367.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.85%)</title><rect x="30.2" y="149" width="10.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="33.17" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (4 samples, 3.42%)</title><rect x="917.7" y="261" width="40.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="920.69" y="271.5" >int..</text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.85%)</title><rect x="625.2" y="229" width="10.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="628.21" y="239.5" ></text>
</g>
<g >
<title>net/netip.parseIPv6 (1 samples, 0.85%)</title><rect x="685.7" y="229" width="10.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="688.73" y="239.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (4 samples, 3.42%)</title><rect x="564.7" y="197" width="40.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="567.70" y="207.5" >sys..</text>
</g>
<g >
<title>net/http.(*conn).setState (1 samples, 0.85%)</title><rect x="877.4" y="277" width="10.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="880.35" y="287.5" ></text>
</g>
<g >
<title>runtime.funcMaxSPDelta (2 samples, 1.71%)</title><rect x="90.7" y="309" width="20.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="93.68" y="319.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (2 samples, 1.71%)</title><rect x="665.6" y="245" width="20.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="668.56" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (4 samples, 3.42%)</title><rect x="302.5" y="197" width="40.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="305.48" y="207.5" >int..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.85%)</title><rect x="826.9" y="165" width="10.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="829.92" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.85%)</title><rect x="80.6" y="245" width="10.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="83.60" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.71%)</title><rect x="20.1" y="181" width="20.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="23.09" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 3.42%)</title><rect x="917.7" y="293" width="40.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="920.69" y="303.5" >run..</text>
</g>
<g >
<title>runtime.convTstring (2 samples, 1.71%)</title><rect x="645.4" y="261" width="20.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="648.38" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Int32).Load (1 samples, 0.85%)</title><rect x="968.1" y="309" width="10.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="971.12" y="319.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 1.71%)</title><rect x="766.4" y="149" width="20.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="769.41" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.85%)</title><rect x="161.3" y="133" width="10.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="164.28" y="143.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.85%)</title><rect x="484.0" y="69" width="10.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="487.02" y="79.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.85%)</title><rect x="534.4" y="69" width="10.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="537.44" y="79.5" ></text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Context).Next (10 samples, 8.55%)</title><rect x="463.8" y="293" width="100.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="466.85" y="303.5" >github.com/g..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.85%)</title><rect x="907.6" y="261" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="910.61" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallScanNoHeader (1 samples, 0.85%)</title><rect x="534.4" y="85" width="10.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="537.44" y="95.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.85%)</title><rect x="1159.7" y="261" width="10.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1162.74" y="271.5" ></text>
</g>
<g >
<title>syscall.write (7 samples, 5.98%)</title><rect x="383.2" y="245" width="70.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="386.16" y="255.5" >syscall..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (4 samples, 3.42%)</title><rect x="564.7" y="181" width="40.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="567.70" y="191.5" >int..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.85%)</title><rect x="716.0" y="309" width="10.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="718.98" y="319.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (4 samples, 3.42%)</title><rect x="786.6" y="133" width="40.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="789.58" y="143.5" >int..</text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.85%)</title><rect x="1169.8" y="357" width="10.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1172.83" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.85%)</title><rect x="30.2" y="117" width="10.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="33.17" y="127.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 1.71%)</title><rect x="20.1" y="197" width="20.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.09" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.71%)</title><rect x="766.4" y="117" width="20.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="769.41" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gList).push (1 samples, 0.85%)</title><rect x="1089.1" y="277" width="10.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1092.15" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (5 samples, 4.27%)</title><rect x="1018.5" y="245" width="50.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1021.55" y="255.5" >runti..</text>
</g>
<g >
<title>net.(*TCPAddr).String (5 samples, 4.27%)</title><rect x="60.4" y="341" width="50.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="63.43" y="351.5" >net.(..</text>
</g>
<g >
<title>github.com/gin-gonic/gin.(*Engine).handleHTTPRequest (1 samples, 0.85%)</title><rect x="695.8" y="309" width="10.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="698.81" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (4 samples, 3.42%)</title><rect x="10.0" y="341" width="40.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >buf..</text>
</g>
<g >
<title>net/http.readRequest (1 samples, 0.85%)</title><rect x="141.1" y="325" width="10.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="144.11" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1 samples, 0.85%)</title><rect x="161.3" y="213" width="10.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="164.28" y="223.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 1.71%)</title><rect x="887.4" y="245" width="20.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="890.44" y="255.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 3.42%)</title><rect x="564.7" y="229" width="40.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="567.70" y="239.5" >sys..</text>
</g>
<g >
<title>internal/poll.(*FD).Close (12 samples, 10.26%)</title><rect x="221.8" y="277" width="121.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="224.79" y="287.5" >internal/poll.(..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.85%)</title><rect x="907.6" y="277" width="10.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="910.61" y="287.5" ></text>
</g>
<g >
<title>time.(*Time).stripMono (1 samples, 0.85%)</title><rect x="373.1" y="277" width="10.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="376.08" y="287.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newarray (2 samples, 1.71%)</title><rect x="524.4" y="133" width="20.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="527.36" y="143.5" ></text>
</g>
<g >
<title>time.nextStdChunk (1 samples, 0.85%)</title><rect x="675.6" y="213" width="10.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="678.64" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/maps.(*Map).getWithoutKeySmallFastStr (1 samples, 0.85%)</title><rect x="141.1" y="293" width="10.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="144.11" y="303.5" ></text>
</g>
<g >
<title>net/http.putBufioWriter (1 samples, 0.85%)</title><rect x="342.8" y="293" width="10.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="345.82" y="303.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (2 samples, 1.71%)</title><rect x="171.4" y="325" width="20.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="174.37" y="335.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (2 samples, 1.71%)</title><rect x="151.2" y="309" width="20.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="154.20" y="319.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.85%)</title><rect x="837.0" y="165" width="10.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.01" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (6 samples, 5.13%)</title><rect x="463.8" y="181" width="60.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="466.85" y="191.5" >encodi..</text>
</g>
</g>
</svg>
